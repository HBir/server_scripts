#!/usr/bin/env bash

# Example output:
# [✓] Pihole is alive (:80)
# [✗] node-red is down (:1880)
# [✓] Wireguard is alive (:51820)
# [✓] Homebridge is alive (:8581)
# [✓] Internet connection is alive


if [[ -z $NOCOLOR ]]; then
  RED='\e[0;31m'
  GREEN='\e[0;32m'
  PLAIN='\e[0m'
else
 RED=''
 GREEN=''
 PLAIN=''
fi

function checkStatus {
  local var NAME="$1"
  local var COMMAND="$2"
  local var PORT="$3"
  local var ADDITIONAL_CMD="$4"
  eval "${COMMAND} &> /dev/null"
  local var STATUS=$?

  if [[ ${STATUS} -eq "0" ]]; then
    printf "${GREEN}[✓]${PLAIN} ${NAME} is alive "
    [[ ! -z $PORT ]] && printf "(${PORT}) "
    [[ ! -z $ADDITIONAL_CMD ]] && eval "$ADDITIONAL_CMD | xargs echo -n"
    printf "\n"
  else
    printf "${RED}[✗] ${NAME} is down "
    [[ ! -z $PORT ]] && printf "(:${PORT}) "
    printf "${PLAIN}\n"
  fi
}

hostname -I
checkStatus 'Pihole' 'pihole status' ':80' 'pihole status | grep --color=none "[✗].*"'
checkStatus 'node-red' 'nc -vz 10.1.0.166 1880' ':1880'
# checkStatus 'Wireguard' 'sudo wg show | grep "interface"' '51820'
checkStatus 'Homebridge' 'nc -vz 10.1.0.166 8581' ':8581'
checkStatus 'IKEA Gateway' 'ping -c 1 -W 1 10.1.0.36' ':5683'
checkStatus 'Reolink' 'ping -c 1 -W 1 10.1.0.221' ':1935'
checkStatus 'External HDD' 'cat /proc/mounts | grep /media/pi/HDD' '/media/pi/HDD' 'sudo hdparm -C /dev/sda2  | grep -oP ": .*"'
# TV and Speakers?
checkStatus 'Internet connection' 'ping -c 1 -W 1 8.8.8.8' '' 'dig +short myip.opendns.com @resolver1.opendns.com'
